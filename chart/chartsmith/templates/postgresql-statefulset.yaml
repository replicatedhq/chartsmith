{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  labels:
    app: chartsmith
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app: chartsmith
      component: postgresql
  template:
    metadata:
      labels:
        app: chartsmith
        component: postgresql
    spec:
      {{- if and .Values.global .Values.global.replicated .Values.global.replicated.dockerconfigjson }}
      imagePullSecrets:
        - name: chartsmith-image-pull-secret
      {{- else if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: postgresql
          image: "{{ .Values.images.pgvector.registry }}/{{ .Values.images.pgvector.repository }}:{{ .Values.images.pgvector.tag }}"
          imagePullPolicy: {{ .Values.images.pgvector.pullPolicy }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ default "postgresql-secret" .Values.postgresql.credentials.existingSecret }}
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ default "postgresql-secret" .Values.postgresql.credentials.existingSecret }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default "postgresql-secret" .Values.postgresql.credentials.existingSecret }}
                  key: password
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "$(POSTGRES_USER)"
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "$(POSTGRES_USER)"
            initialDelaySeconds: 30
            periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.postgresql.storage.size | default "10Gi" }}
    {{- if .Values.postgresql.storage.className }}
      storageClassName: {{ .Values.postgresql.storage.className | quote }}
    {{- end }}
    {{- end }}
